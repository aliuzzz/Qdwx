# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'd:\0work\0wxdata\MTR\mtrtools.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import paramiko 
import time
from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(700, 500)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.centralwidget)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.groupBox_login = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_login.setObjectName("groupBox_login")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.groupBox_login)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.label_mtrip = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_mtrip.setFont(font)
        self.label_mtrip.setObjectName("label_mtrip")
        self.gridLayout.addWidget(self.label_mtrip, 0, 0, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 1, 1, 1)
        self.lineEdit_mtrip = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_mtrip.setObjectName("lineEdit_mtrip")
        #限制输入ip
        self.lineEdit_mtrip.setValidator(QtGui.QRegExpValidator(QtCore.QRegExp("^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)$")))
        self.gridLayout.addWidget(self.lineEdit_mtrip, 0, 2, 1, 1)
        self.label_port = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_port.setFont(font)
        self.label_port.setObjectName("label_port")
        self.gridLayout.addWidget(self.label_port, 0, 3, 1, 1)
        self.lineEdit_port = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_port.setObjectName("lineEdit_port")
        #限制只能输入数字
        self.lineEdit_port.setValidator(QtGui.QRegExpValidator(QtCore.QRegExp("^[0-9]{1,5}$")))
        self.gridLayout.addWidget(self.lineEdit_port, 0, 4, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 5, 1, 1)
        self.label_name = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_name.setFont(font)
        self.label_name.setObjectName("label_name")
        self.gridLayout.addWidget(self.label_name, 1, 0, 1, 1)
        spacerItem2 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem2, 1, 1, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem3, 1, 5, 1, 1)
        self.label_password = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_password.setFont(font)
        self.label_password.setObjectName("label_password")
        self.gridLayout.addWidget(self.label_password, 2, 0, 1, 1)
        spacerItem4 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem4, 2, 1, 1, 1)
        spacerItem5 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem5, 2, 5, 1, 1)
        self.label_private = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_private.setFont(font)
        self.label_private.setObjectName("label_private")
        self.gridLayout.addWidget(self.label_private, 3, 0, 1, 1)
        spacerItem6 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem6, 3, 1, 1, 1)
        spacerItem7 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem7, 3, 5, 1, 1)
        self.label_province = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_province.setFont(font)
        self.label_province.setObjectName("label_province")
        self.gridLayout.addWidget(self.label_province, 4, 0, 1, 1)
        spacerItem8 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem8, 4, 1, 1, 1)
        spacerItem9 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem9, 4, 5, 1, 1)
        self.label_file = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_file.setFont(font)
        self.label_file.setObjectName("label_file")
        self.gridLayout.addWidget(self.label_file, 5, 0, 1, 1)
        spacerItem10 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem10, 5, 1, 1, 1)
        spacerItem11 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem11, 5, 5, 1, 1)
        self.label_ip = QtWidgets.QLabel(self.groupBox_login)
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(10)
        self.label_ip.setFont(font)
        self.label_ip.setObjectName("label_ip")
        self.gridLayout.addWidget(self.label_ip, 6, 0, 1, 1)
        spacerItem12 = QtWidgets.QSpacerItem(18, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem12, 6, 1, 1, 1)
        spacerItem13 = QtWidgets.QSpacerItem(17, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.gridLayout.addItem(spacerItem13, 6, 5, 1, 1)
        self.lineEdit_name = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_name.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.lineEdit_name.setReadOnly(False)
        self.lineEdit_name.setObjectName("lineEdit_name")
        self.gridLayout.addWidget(self.lineEdit_name, 1, 2, 1, 3)
        self.lineEdit_password = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_password.setObjectName("lineEdit_password")
        self.gridLayout.addWidget(self.lineEdit_password, 2, 2, 1, 3)
        self.lineEdit_private = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_private.setObjectName("lineEdit_private")
        self.gridLayout.addWidget(self.lineEdit_private, 3, 2, 1, 3)
        self.lineEdit_province = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_province.setObjectName("lineEdit_province")
        self.gridLayout.addWidget(self.lineEdit_province, 4, 2, 1, 3)
        self.lineEdit_file = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_file.setObjectName("lineEdit_file")
        self.gridLayout.addWidget(self.lineEdit_file, 5, 2, 1, 3)
        self.lineEdit_ip = QtWidgets.QLineEdit(self.groupBox_login)
        self.lineEdit_ip.setObjectName("lineEdit_ip")
        #限制输入ip地址
        self.lineEdit_ip.setValidator(QtGui.QRegExpValidator(QtCore.QRegExp("^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)$")))
        self.gridLayout.addWidget(self.lineEdit_ip, 6, 2, 1, 3)
        self.gridLayout.setColumnStretch(0, 2)
        self.gridLayout.setColumnStretch(2, 6)
        self.gridLayout.setColumnStretch(3, 2)
        self.gridLayout.setColumnStretch(4, 2)
        self.horizontalLayout_2.addLayout(self.gridLayout)
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        spacerItem14 = QtWidgets.QSpacerItem(20, 13, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem14)
        self.pushButton_login = QtWidgets.QPushButton(self.groupBox_login)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.pushButton_login.sizePolicy().hasHeightForWidth())
        self.pushButton_login.setSizePolicy(sizePolicy)
        self.pushButton_login.setMinimumSize(QtCore.QSize(1, 200))
        self.pushButton_login.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setFamily("微软雅黑")
        font.setPointSize(28)
        font.setBold(True)
        font.setWeight(75)
        self.pushButton_login.setFont(font)
        self.pushButton_login.setObjectName("pushButton_login")
        self.verticalLayout.addWidget(self.pushButton_login)
        spacerItem15 = QtWidgets.QSpacerItem(20, 17, QtWidgets.QSizePolicy.Minimum, QtWidgets.QSizePolicy.Expanding)
        self.verticalLayout.addItem(spacerItem15)
        self.horizontalLayout_2.addLayout(self.verticalLayout)
        self.verticalLayout_2.addWidget(self.groupBox_login)
        self.groupBox_output = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_output.setObjectName("groupBox_output")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.groupBox_output)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.textBrowser = QtWidgets.QTextBrowser(self.groupBox_output)
        self.textBrowser.setObjectName("textBrowser")
        self.horizontalLayout.addWidget(self.textBrowser)
        self.verticalLayout_2.addWidget(self.groupBox_output)
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        #添加图标为当前目录下的mtr.png
        MainWindow.setWindowIcon(QtGui.QIcon('D:/0work/0wxdata/MTR/mtr-tools/mtr.ico'))
        #设置任务栏图标为目录下的mtr.ico
            

        
        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

        self.pushButton_login.clicked.connect(self.login)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MTR添加工具"))
        self.groupBox_login.setTitle(_translate("MainWindow", "登录和配置"))
        self.label_mtrip.setText(_translate("MainWindow", "Mtr机器ip："))
        self.label_port.setText(_translate("MainWindow", "端口："))
        self.lineEdit_port.setPlaceholderText(_translate("MainWindow", "22"))
        self.label_name.setText(_translate("MainWindow", "用户名："))
        self.label_password.setText(_translate("MainWindow", "密码："))
        self.label_private.setText(_translate("MainWindow", "私钥路径："))
        self.label_province.setText(_translate("MainWindow", "省份地区："))
        self.label_file.setText(_translate("MainWindow", "文件名："))
        self.label_ip.setText(_translate("MainWindow", "ip："))
        self.lineEdit_name.setText(_translate("MainWindow", "root"))
        self.lineEdit_province.setPlaceholderText(_translate("MainWindow", "/华北-山东/"))
        self.lineEdit_file.setPlaceholderText(_translate("MainWindow", "青岛-株洲路三线-123.234.3.114-兆言-联通"))
        self.pushButton_login.setText(_translate("MainWindow", "OK!"))
        self.groupBox_output.setTitle(_translate("MainWindow", "输出信息"))


    #添加pushButton_login的动作函数登录
    def login(self):
        #获取登录和mtr信息--------------------------------
        hostname = self.lineEdit_mtrip.text()
        port = self.lineEdit_port.text()
        name = self.lineEdit_name.text()
        password = self.lineEdit_password.text()
        private_path = self.lineEdit_private.text()
        province = self.lineEdit_province.text()
        file = self.lineEdit_file.text()
        ip = self.lineEdit_ip.text()
        #------------------------------------------------ 
        
        #待写入的信息-------------------------------------  
        command_newmtr = 'touch /mtr' + province + file + '.sh'
        command_yuan = 'echo -e "\n/bin/sh /mtr'+ province + file + '.sh  &" >> /mtr/yuan.sh'
        command_head = 'echo -e "#!/bin/sh" >> /mtr'+province+file+'.sh'
        command_node = "echo \"node=\$(awk '{if(\$0~\\\"node\\\") print\$2}' /root/mtr.conf)\" >> /mtr"+province+file+".sh"
        command_mtr = "echo -e 'Y=`date   +%Y`\nm=`date   +%m`\nd=`date   +%d`\nH=`date   +%H`\nFile=`date +%Y年%m月`/`date +%Y年%m月%d日`"+ province +"`date +%H`-"+file +"[$node].txt\ndate >>/data/mtr/$File\n/usr/sbin/mtr -r -c 56 -n "+ip+" >>/data/mtr/$File\necho \"---------------------------------------------------------------------------------------\" >>/data/mtr/$File' >> /mtr"+province+file+".sh"        


        #-------------------------------------------------
        #链接ssh------------------------------------------
        self.textBrowser.append("正在登录...")
        #判断self.lineEdit_private.text()是否为空,不空就是通过私钥登录
        if self.lineEdit_private.text() == '':
            ssh_client = paramiko.SSHClient()   
            ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())   
            ssh_client.connect(hostname=hostname, port=port, username=name, password=password)
        else:
            private = paramiko.RSAKey.from_private_key_file(private_path)
            ssh_client = paramiko.SSHClient()   
            ssh_client.set_missing_host_key_policy(paramiko.AutoAddPolicy())   
            ssh_client.connect(hostname=hostname, port=port, username=name, key_filename=private)
              
        #-------------------------------------------------


        #执行命令----------------------------------------

        self.textBrowser.append(command_newmtr)
        stdin, stdout, stderr = ssh_client.exec_command(command_newmtr)
        self.textBrowser.append("new mtr")
        time.sleep(1)
        self.textBrowser.append(command_mtr)
        self.textBrowser.append(command_head)
        self.textBrowser.append(command_node)
        stdin, stdout, stderr = ssh_client.exec_command(command_head)
        stdin, stdout, stderr = ssh_client.exec_command(command_node)
        stdin, stdout, stderr = ssh_client.exec_command(command_mtr)
        self.textBrowser.append("mtr")
        time.sleep(1)
        self.textBrowser.append(command_yuan)
        stdin, stdout, stderr = ssh_client.exec_command(command_yuan)# stdout 为正确输出，stderr为错误输出，同时是有1个变量有值   
        self.textBrowser.append("success!!")
        self.textBrowser.append("关闭链接")
        self.textBrowser.append("-------------------------------------------------------------------")
        #关闭SSHClient连接 
        ssh_client.close()